select 1 from dual;
--dual은 임시표 의미, 아무거나 출력해보고 확인하고 싶을 때 사용

/*
함수 (Function)
    매개변수를 받아 특정 계산(작업)을 수행하고 결과를 반환하는 구조로 되어있음

함수 유형
    -단일행 함수 - 단일행 매개변수를 받아 결과 값 반환
    -여러행 함수 - 여러행 매개변수를 받아 결과 값 반환
*/

--단일행 함수

/*
대소문자 변환 함수
*/
--LOWER()함수 -소문자로 변환
SELECT employee_id, last_name, department_id
FROM employees
WHERE last_name = 'higgins';

SELECT employee_id, last_name, department_id
FROM employees
WHERE LOWER(last_name) = 'higgins';
--웬만하면 좌측에는 함수를 쓰지 않는 게 좋음! 불가피하다면 OK

--UPPER()함수 - 대문자로 변환
SELECT UPPER('higgins') FROM dual;

--INITCAP() 함수 - 첫글자만 대문자로 변환
SELECT employee_id, last_name, department_id
FROM employees
WHERE last_name = INITCAP('higgins');

/*
문자 조작 함수
*/
--CONCAT() 함수 - 두 개 파라미터 값을 연결
SELECT CONCAT('Hello', 'World') FROM dual;
SELECT 'Hello'||'World' FROM dual;

--SUBSTR() - 지정된 길이의 문자열을 추출
--substring, 프로그램마다 0과1의 기준이 다르니 실행 시켜보고 참고하기
SELECT SUBSTR('HelloWorld', 1, 5) FROM dual;

--LENGTH() - 문자열 길이를 숫자 값으로 표시함
SELECT LENGTH('HelloWorld') FROM dual;

--INSTR() - 이름이 지정된 문자의 숫자 위치를 찾습니다
SELECT INSTR('HelloWorld', 'W') FROM dual;

--LPAD() 길이가 n이 되도록 왼쪽부터 문자식으로 채운 표현식을 반환
SELECT LPAD('salary', 10, '*') FROM dual;

--RPAD() 길이가 n이 되도록 오른쪽부터 문자식으로 채운 표현식을 반환
SELECT RPAD('salary', 10, '*') FROM dual;

--REPLACE() - 문자열 치환
SELECT REPLACE('Jack and JUE', 'J', 'BL') FROM dual;

--TRIM() - 문자열에서 서냉 문자나 후행 문자를 자름
SELECT TRIM('H' FROM 'HelloWorld') FROM dual;

/*
숫자 함수
*/
--ROUND() -지정된 소수점 자릿수로 값을 반올림
SELECT ROUND(45.926, 2) FROM dual;

-- TRUNC() - 지정된 소수점 자릿수로 값을 truncate함
SELECT TRUNC(45.926, 2) FROM dual;

--MOD() - 나눈 나머지를 반환
SELECT MOD(1600, 300) FROM dual;

/*
날짜 함수
*/
/*
--SYSDATE()
    반환값 - 날짜, 시간
*/

SELECT sysdate FROM dual;

/*
날짜 연산
    -날짜에 숫자를 더하거나 빼서 결과 날짜 값을 구함
    -두 날짜 사이의 일수를 알아내기 위해 빼기 연산을 함
    -시간 수를 24로 나눠 날짜에 시간을 더함
*/
SELECT last_name, (SYSDATE-hire_date)/7 AS WEEKS
FROM employees
WHERE department_id =90;

/*
날짜 조작 함수

MONTHS_BETWEEN - 두 날짜 간의 월 수
ADD_MONTHS() - 날짜에 월 추가 
NEXT_DAY() - 지정된 날짜의 다음날
LAST_DAY() - 월의 마지막 날
ROUND() - 날짜 반올림
TRUNC() - 날짜 TRUNCATE (to shorten)
*/

SELECT MONTHS_BETWEEN('22-12-16', '21-12-16') FROM dual;
SELECT ADD_MONTHS ('22-12-16', 1) FROM dual;
SELECT NEXT_DAY ('22-12-16', 6) FROM dual; 
--일을 숫자로 입력해야 가능
SELECT LAST_DAY('23-02-16') FROM dual;
SELECT ROUND(SYSDATE, 'MONTH') FROM dual;
SELECT TRUNC(SYSDATE, 'MONTH') FROM dual;


/*
변환함수
*/

/*
--TO_CHAR() 함수 - 날짜 또는 숫자 사용 가능
    YYYY - 숫자로 된 전체 연도
    YEAR - 영어로 표기된 연도
    MM -월의 2자리 값
    MONTH - 전체 월 이름
    MON - 월의 3자 약어
    DY - 3문자 요일 약어
    DAY - 요일 전체 이름
    DD - 숫자 형식의 월간 일
    AM, PM meridian time
    A.M, P.M  (with .)
    HH, HH12, HH24 - 하루 시간 또는 반일 시간
    MI - 분(0-59)
    SS - 초(0-59)
    
    TIMESTAMP TYPE
    FF - 마이크로초단위 millisecond
    
*/
SELECT last_name, TO_CHAR(hire_date, 'YYYY-MM-DD HH24:MI:SS') AS HIREDATE
FROM employees;

SELECT SYSTIMESTAMP FROM dual;
SELECT TO_CHAR(SYSTIMESTAMP, 'YYYY-MM-DD HH24:MI:SS.FF2') FROM dual;

/*
TO_CHAR() 숫자에 사용

    9 - 숫자로 나타냄
    0 - 0이 표시되도록 강제 적용
    $ - 부동 달러 기호 배치
    L - 부동 로컬 통화 기호 사용 (윈도우 설정)
    . - 소수점 출력
    , - 천단위 표시자로 쉼표 출력

*/

-- TO_DATE() 문자를 DATE 타입으로 변환
SELECT last_name, TO_CHAR(hire_date, 'YYYY-MM-DD')
FROM employees
WHERE hire_date < TO_DATE('2005-01-01', 'YYYY-MM-DD');

/*
함수 중첩
    단일 행 함수는 어떠한 레벨로도 중첩될 수 있음
    중첩된 함수는 가장 깊은 레벨에서 가장 낮은 레벨로 평가됨
*/
SELECT last_name, UPPER(CONCAT(SUBSTR(LAST_NAME, 1,8), '_US'))
FROM employees
WHERE department_id = 60;

/*
NVL() 함수
    null 값을 실제 값으로 반환
    null은 연산이 안됨
*/

SELECT last_name, salary, NVL(commission_pct, 0)
    (salary*12) + (salary*12*NVL(commission_pct, 0)) AN_SAL
FROM employees;

SELECT commission_pct
FROM employees;

/*
NVL2() 함수
    첫번째 표현식을 검사함. 첫번째 표현식이 null이 아니면 NVL2 함수는 두번째 표현식을 반환함
    첫번째 표현식이 null이면 세번째 표현식을 반환함
*/

SELECT last_name, salary, commission_pct,
    NVL2(commission_pct,
            'SAL+COMM', 'SAL') income
FROM employees
WHERE department_id IN (50, 80)
;

/*
NULLIF() 함수
    두 표현식을 비교 같으면 null 반환, 다르면 expr1 반환
    그러나 expr1에 대해 리터럴 NULL을 지정할 수 없음
*/
SELECT first_name, LENGTH(first_name) "expr1",
    last_name, LENGTH(last_name) "expr2",
    NULLIF(LENGTH(first_name), LENGTH(last_name)) result
FROM employees
;